Basic Rule of Thumb:
	All side effects are discarded, unless specified by the user.

I/O Policy:

1. All file operations are considered side effects that the user wishes to keep.

2. All read streams will be closed in workers, but the already present content
     in them will be logged and ready to use for the worker.
   All writes to streams will be logged and applied at join time.

3. Files opened at parent and inherited by the children will be have their
     side effects automatically merged at join time.
   These side effects (writes, seeks, truncations) occur at offsets specified by
     the user. These writes will performed after those done by the parent
     thread at join time. Append mode ensures that no such overwriting occurs.

4. A worker can see the side effects of its own actions, but cannot view others'
     side effects.

5. Closing does nothing in children as the effects may need to committed in the
     parent (although reads and writes to a closed file will still result in
     error).

6. If parent closes a file and then joins with child who has side effects for
     that file, an error will occur.

7. Commits to disk will occur once no workers are left.

------------------------INCREASE IN POLICY COMPLICATION------------------------

8. Children can also open files, but the following rules apply:
	- Read only: safe and does not affect the parent.
	- Write only: file will not be actually opened.
	- Read & Write: file will be opened, but all changes will be logged.
	- Opened w/ truncate: The file will not be truncated.

9. As specified, users can return side effects. I/O side effects are no
     exception and can be returned to parent. This action will open a new fd in
     the parent with the same permissions as it was opened.
   Note that if the side effects would be committed automatically (aka fd was
     opened by parent), the returning does nothing in the child, but duplicates
     the fd in parent.
   Note that affects of opening such as truncation will occur if committed to
     disk.
